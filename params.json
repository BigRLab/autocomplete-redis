{"name":"Autocomplete-redis","tagline":"Auto-completion with redis, 基于redis的自动补全。","body":"autocomplete-redis\r\n============\r\n\r\nautocomplete-redis is a quora like automatic autocompletion based on redis.\r\n\r\nInstallation\r\n---------\r\n\r\n* install pip (if you haven't yet) `easy_install pip`\r\n\r\n* install pymmseg (support for Chinese Characters)： `pip install pymmseg`\r\n\r\n* install autocomplete-redis： `pip install -e git+https://github.com/fengli/autocomplete-redis.git#egg=autocomplete-dev` \r\n\r\nQuick start\r\n----------\r\n* Assume you have few items to index.\r\n\r\n```python\r\nitems=[{\"id\":'1', \"score\":9, \"term\": u\"hello world, that's great\"},\r\n       {\"id\":'2', \"score\":10, \"term\": u\"what the hell or yell\"},\r\n       {\"id\":'3', \"score\":8.5, \"term\":u\"World is like a box of chocolate\"},\r\n      ]\r\n```\r\n\r\nThe code for build the index and search is simple:\r\n\r\n```python\r\nfrom autocomplete import Autocomplete\r\n\r\n#build index\r\nau = Autocomplete (\"scope\")\r\nfor item in items:\r\n  au.add_item (item)\r\n#search\r\nrestuls = au.search_query (u'hel')\r\n\r\nprint results\r\n[{'term': 'what the hell or yell', 'score': 10, 'id': '2'}, {'term': \"hello world, that's great\", 'score': 9, 'id': '1'}]\r\n```\r\n\r\n\r\nAPI\r\n---------------\r\n\r\n* Convention: the item you pass to `autocomplete` should have at least `\"id\"` and `\"term\"`, `\"score\"` is optional, but it's important if you want to return based on ranking. And you could have other fields as you like.\r\n\r\n```python\r\n{\"id\":'1', \"score\":9, \"term\": u\"hello world, that's great\", 'meta':\"1992\"}\r\n```\r\n\r\n\r\n* `def __init__ (self, scope, redisaddr=\"localhost\", limits=5, cached=True)`\r\n\r\n  * scope: Scope allows you to index multiple independent indexes. \r\n  * redisaddr: your redis address\r\n  * limits: How many results you want to get.\r\n  * cached: Cache multiple keys combination?\r\n\r\n* `def del_index (self)`\r\n\r\nDelete all the indexes. Warning: all data will be deleted.\r\n\r\n* `def add_item (self,item)`\r\n\r\nAdd item to index.\r\n\r\n* `def del_item (self,item)`\r\n\r\nDelete item from index.\r\n\r\n* `def update_item (self, item)`\r\n\r\nUpdate item indexed with item['id'] with the new version.\r\n\r\n* `def search_query (self,prefix)`\r\n\r\nSearch in database for all items that `item['term']` included `PREFIX`\r\n\r\nBring to you by:\r\n----------------\r\n\r\n* http://readpi.com","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}