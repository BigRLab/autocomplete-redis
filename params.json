{"name":"Autocomplete-redis","tagline":"Auto-completion with redis, 基于redis的自动补全。","body":"autocomplete-redis\r\n============\r\n\r\nautocomplete-redis 是基于redis的自动补全，他会自动索引你要自动补全的句子，然后根据你的输入返回包含这个输入的句子。这儿有一个完整的演示实例： [http://readpi.com](http://readpi.com) ,索引了一些书的名字，效果如下图：\r\n\r\n![autocomplete-demo](http://blog.readpi.com/wp-content/uploads/2013/09/autocomplete-demo.png)\r\n\r\n安装\r\n---------\r\n\r\n* 安装pip(如果没有安装过的话)： `easy_install pip`\r\n\r\n* 安装pymmseg中文分词： `pip install -e git+https://github.com/pluskid/pymmseg-cpp.git#egg=pymmseg-dev` 依赖pymmseg中文分词，安装之。\r\n\r\n* 安装autocomplete-redis： `pip install -e git+https://github.com/fengli/autocomplete-redis.git#egg=autocomplete-dev` \r\n\r\n快速使用\r\n----------\r\n* 假设你有如下需要索引的json文本 input.json:\r\n\r\n```python\r\n   {\"score\": \"9\", \"id\": \"1\", \"term\": \"轻轻地你走了\"}\r\n   {\"score\": \"8\", \"id\": \"2\", \"term\": \"正如你轻轻地来\"}\r\n   {\"score\": \"8.5\", \"id\": \"3\", \"term\": \"你挥一挥衣袖，不带走一片云彩\"}\r\n```\r\nscore是返回结果排序的rank值，最大的值最靠前。\r\n\r\n* 建立索引和查询\r\n\r\n```python\r\n   a=Autocomplete(filename=\"input.json\", modelname=\"whateveryouwant\")\r\n   a.rebuild_index ()\r\n   results=a.search_query (u'你 轻轻')\r\n   [{\"score\": \"9\", \"id\": \"1\", \"term\": \"轻轻地你走了\"}, {\"score\": \"8\", \"id\": \"2\", \"term\": \"正如你轻轻地来\"}]\r\n```\r\n   filename是你要索引的文件名，modelname是一个在redis数据库中唯一的名字，你可以跟你的应用起名。\r\n\r\n详细的说明\r\n------------\r\n\r\nautocomplete-redis的输入可以是list, json文档或者django中的model类。\r\n\r\n* 输入list\r\n\r\n```python\r\n    items=['{\"score\": \"9\", \"id\": \"1\", \"term\": \"轻轻地你走了\"}', \\\r\n           '{\"score\": \"8\", \"id\": \"2\", \"term\": \"正如你轻轻地来\"}', \\\r\n           '{\"score\": \"8.5\", \"id\": \"3\", \"term\": \"你挥一挥衣袖，不带走一片云彩\"}']\r\n    a=Autocomplete(jsonitems=items, modelname=\"whateveryouwant\")\r\n    a.search_query (u'轻轻')\r\n```\r\n\r\n* 输入json文件, 比如input.json如下：\r\n\r\n```python\r\n   {\"score\": \"9\", \"id\": \"1\", \"term\": \"轻轻地你走了\"}\r\n   {\"score\": \"8\", \"id\": \"2\", \"term\": \"正如你轻轻地来\"}\r\n   {\"score\": \"8.5\", \"id\": \"3\", \"term\": \"你挥一挥衣袖，不带走一片云彩\"}\r\n\r\n   a=Autocomplete(filename=\"input.json\", modelname=\"whateveryouwant\")\r\n   a.rebuild_index ()\r\n   results=a.search_query (u'你 轻轻')\r\n   print results\r\n   [{\"score\": \"9\", \"id\": \"1\", \"term\": \"轻轻地你走了\"}, {\"score\": \"8\", \"id\": \"2\", \"term\": \"正如你轻轻地来\"}]\r\n```\r\n   filename是json文件的路径，modelname是确定你redis数据库中唯一的名字。\r\n\r\n* 输入是django中的model\r\n\r\n  比如在你的app booklist中你有一个model定义为\r\n\r\n```python  \r\n  class book (models.Model):\r\n    term=models.CharField (max_length=200)\r\n    score=models.IntegerField (default=0)\r\n    id=models.IntegerField ()\r\n```\r\n\r\n   你可以这样建立索引：\r\n\r\n```python   \r\n   a=Autocomplete (app_label='booklist',model_label='book')\r\n   a.rebuild_index()\r\n```\r\n\r\n   搜索可以：\r\n\r\n```python   \r\n   results=a.search_query (u'你是')\r\n```\r\n   app_label是你的app的名字,model_label是你要索引model的名字。这儿不需要modelname，这个autocomplete-redis会自动根据model_label生成。\r\n\r\n* 你可能会需要一个mapping\r\n\r\n在以上的例子中，所有的dictionary输入都有固定的键值：score用来给返回的查询结果进行排序，id是返回结果的id值，term是要查询的句子本身。如果你要修改这些默认的值，比如你有input.json：\r\n\r\n```python\r\n   {\"score\": \"9\", \"pk\": \"1\", \"title\": \"轻轻地你走了\", \"author\":\"徐志摩\"}\r\n   {\"score\": \"8\", \"pk\": \"2\", \"title\": \"正如你轻轻地来\",\"author\":\"徐志摩\"}\r\n   {\"score\": \"8.5\", \"pk\": \"3\", \"title\": \"你挥一挥衣袖，不带走一片云彩\",\"author\":\"徐志摩\"}\r\n```\r\n   这时你只需要传递一个额外的参数，\r\n\r\n   ```python\r\n   mapping={'id':'pk','term':'title','score':'score'}\r\n   ```\r\n\r\n   将你的键值映射到这三个键值来。这个mapping也可以是函数，比如\r\n\r\n```python\r\n   mapping = {\r\n    'id':'pk',\r\n    'term':lambda x:' '.join([x['title'],x['author']]),\r\n    'score':lambda x:x['score'],\r\n    }\r\n```\r\n    在这个例子中，可以这样使用\r\n\r\n```python    \r\n\r\n    a=Autocomplete (filename=\"input.json\",modelname=\"whateveryouwant\",mapping=mapping)\r\n    a.rebuild_index ()\r\n    a.search_query (u'徐志摩')\r\n\r\n```\r\n\r\n所有可能的参数\r\n---------------\r\n\r\n```python\r\n\r\nclass Autocomplete (object):\r\n  def __init__ (self, redisaddr=\"localhost\", modelname=\"book\",\r\n                limits=5, cached=True, mapping=None, filename=None,\r\n                jsonitems=None, app_label=None, model_label=None, fields=None):\r\n\r\n```\r\n\r\n* redisaddr: 你的redis实例的地址\r\n* modelname: redis数据库中你这组索引的唯一名字 (在索引数据库的时候不需要提供)\r\n* limits: 返回的结果数\r\n* cached: 是否cache多个键值组合的结果\r\n* mapping: mapping你的字典key值到'term','score'和'id'\r\n* filename: 你的json文件的路径 (只有在json文件模式下使用)\r\n* jsonitems: 要索引的list. (只有在输入list的时候使用)\r\n* app_lable,model_label: (只有在索引model的时候使用)\r\n* fileds: 你希望索引model中的哪些fields (只有在索引model的时候使用)，默认索引全部的fields.\r\n\r\nBring to you by:\r\n----------------\r\n\r\n* 阅读派：http://readpi.com\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}